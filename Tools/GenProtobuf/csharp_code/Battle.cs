// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Battle.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Battle.proto</summary>
public static partial class BattleReflection {

  #region Descriptor
  /// <summary>File descriptor for Battle.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static BattleReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgxCYXR0bGUucHJvdG8iJAoLUnNwRnJlZUhlcm8SFQoNZnJlZV9oZXJvX2lk",
          "cxgBIAMoBCIgCg1TZWxlY3RIZXJvUmVxEg8KB2hlcm9faWQYASABKAQiIAoN",
          "U2VsZWN0SGVyb1JzcBIPCgdpc19zdWNjGAEgASgIQgP4AQFiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::RspFreeHero), global::RspFreeHero.Parser, new[]{ "FreeHeroIds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SelectHeroReq), global::SelectHeroReq.Parser, new[]{ "HeroId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SelectHeroRsp), global::SelectHeroRsp.Parser, new[]{ "IsSucc" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class RspFreeHero : pb::IMessage<RspFreeHero> {
  private static readonly pb::MessageParser<RspFreeHero> _parser = new pb::MessageParser<RspFreeHero>(() => new RspFreeHero());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RspFreeHero> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BattleReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RspFreeHero() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RspFreeHero(RspFreeHero other) : this() {
    freeHeroIds_ = other.freeHeroIds_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RspFreeHero Clone() {
    return new RspFreeHero(this);
  }

  /// <summary>Field number for the "free_hero_ids" field.</summary>
  public const int FreeHeroIdsFieldNumber = 1;
  private static readonly pb::FieldCodec<ulong> _repeated_freeHeroIds_codec
      = pb::FieldCodec.ForUInt64(10);
  private readonly pbc::RepeatedField<ulong> freeHeroIds_ = new pbc::RepeatedField<ulong>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<ulong> FreeHeroIds {
    get { return freeHeroIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RspFreeHero);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RspFreeHero other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!freeHeroIds_.Equals(other.freeHeroIds_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= freeHeroIds_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    freeHeroIds_.WriteTo(output, _repeated_freeHeroIds_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += freeHeroIds_.CalculateSize(_repeated_freeHeroIds_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RspFreeHero other) {
    if (other == null) {
      return;
    }
    freeHeroIds_.Add(other.freeHeroIds_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10:
        case 8: {
          freeHeroIds_.AddEntriesFrom(input, _repeated_freeHeroIds_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class SelectHeroReq : pb::IMessage<SelectHeroReq> {
  private static readonly pb::MessageParser<SelectHeroReq> _parser = new pb::MessageParser<SelectHeroReq>(() => new SelectHeroReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SelectHeroReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BattleReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SelectHeroReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SelectHeroReq(SelectHeroReq other) : this() {
    heroId_ = other.heroId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SelectHeroReq Clone() {
    return new SelectHeroReq(this);
  }

  /// <summary>Field number for the "hero_id" field.</summary>
  public const int HeroIdFieldNumber = 1;
  private ulong heroId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong HeroId {
    get { return heroId_; }
    set {
      heroId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SelectHeroReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SelectHeroReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HeroId != other.HeroId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HeroId != 0UL) hash ^= HeroId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HeroId != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(HeroId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HeroId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(HeroId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SelectHeroReq other) {
    if (other == null) {
      return;
    }
    if (other.HeroId != 0UL) {
      HeroId = other.HeroId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          HeroId = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class SelectHeroRsp : pb::IMessage<SelectHeroRsp> {
  private static readonly pb::MessageParser<SelectHeroRsp> _parser = new pb::MessageParser<SelectHeroRsp>(() => new SelectHeroRsp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SelectHeroRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BattleReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SelectHeroRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SelectHeroRsp(SelectHeroRsp other) : this() {
    isSucc_ = other.isSucc_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SelectHeroRsp Clone() {
    return new SelectHeroRsp(this);
  }

  /// <summary>Field number for the "is_succ" field.</summary>
  public const int IsSuccFieldNumber = 1;
  private bool isSucc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsSucc {
    get { return isSucc_; }
    set {
      isSucc_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SelectHeroRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SelectHeroRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsSucc != other.IsSucc) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (IsSucc != false) hash ^= IsSucc.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (IsSucc != false) {
      output.WriteRawTag(8);
      output.WriteBool(IsSucc);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (IsSucc != false) {
      size += 1 + 1;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SelectHeroRsp other) {
    if (other == null) {
      return;
    }
    if (other.IsSucc != false) {
      IsSucc = other.IsSucc;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          IsSucc = input.ReadBool();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
