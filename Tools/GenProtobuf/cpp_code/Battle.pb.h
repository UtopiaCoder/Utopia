// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Battle.proto

#ifndef PROTOBUF_Battle_2eproto__INCLUDED
#define PROTOBUF_Battle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class RspFreeHero;
class RspFreeHeroDefaultTypeInternal;
extern RspFreeHeroDefaultTypeInternal _RspFreeHero_default_instance_;
class SelectHeroReq;
class SelectHeroReqDefaultTypeInternal;
extern SelectHeroReqDefaultTypeInternal _SelectHeroReq_default_instance_;
class SelectHeroRsp;
class SelectHeroRspDefaultTypeInternal;
extern SelectHeroRspDefaultTypeInternal _SelectHeroRsp_default_instance_;

namespace protobuf_Battle_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Battle_2eproto

// ===================================================================

class RspFreeHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RspFreeHero) */ {
 public:
  RspFreeHero();
  virtual ~RspFreeHero();

  RspFreeHero(const RspFreeHero& from);

  inline RspFreeHero& operator=(const RspFreeHero& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RspFreeHero(RspFreeHero&& from) noexcept
    : RspFreeHero() {
    *this = ::std::move(from);
  }

  inline RspFreeHero& operator=(RspFreeHero&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspFreeHero& default_instance();

  static inline const RspFreeHero* internal_default_instance() {
    return reinterpret_cast<const RspFreeHero*>(
               &_RspFreeHero_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(RspFreeHero* other);
  void Swap(RspFreeHero* other);
  friend void swap(RspFreeHero& a, RspFreeHero& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RspFreeHero* New() const PROTOBUF_FINAL { return New(NULL); }

  RspFreeHero* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RspFreeHero& from);
  void MergeFrom(const RspFreeHero& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RspFreeHero* other);
  protected:
  explicit RspFreeHero(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 free_hero_ids = 1;
  int free_hero_ids_size() const;
  void clear_free_hero_ids();
  static const int kFreeHeroIdsFieldNumber = 1;
  ::google::protobuf::uint64 free_hero_ids(int index) const;
  void set_free_hero_ids(int index, ::google::protobuf::uint64 value);
  void add_free_hero_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      free_hero_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_free_hero_ids();

  // @@protoc_insertion_point(class_scope:RspFreeHero)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > free_hero_ids_;
  mutable int _free_hero_ids_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_Battle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectHeroReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SelectHeroReq) */ {
 public:
  SelectHeroReq();
  virtual ~SelectHeroReq();

  SelectHeroReq(const SelectHeroReq& from);

  inline SelectHeroReq& operator=(const SelectHeroReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SelectHeroReq(SelectHeroReq&& from) noexcept
    : SelectHeroReq() {
    *this = ::std::move(from);
  }

  inline SelectHeroReq& operator=(SelectHeroReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectHeroReq& default_instance();

  static inline const SelectHeroReq* internal_default_instance() {
    return reinterpret_cast<const SelectHeroReq*>(
               &_SelectHeroReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(SelectHeroReq* other);
  void Swap(SelectHeroReq* other);
  friend void swap(SelectHeroReq& a, SelectHeroReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SelectHeroReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SelectHeroReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SelectHeroReq& from);
  void MergeFrom(const SelectHeroReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SelectHeroReq* other);
  protected:
  explicit SelectHeroReq(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 hero_id = 1;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 hero_id() const;
  void set_hero_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SelectHeroReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint64 hero_id_;
  mutable int _cached_size_;
  friend struct protobuf_Battle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectHeroRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SelectHeroRsp) */ {
 public:
  SelectHeroRsp();
  virtual ~SelectHeroRsp();

  SelectHeroRsp(const SelectHeroRsp& from);

  inline SelectHeroRsp& operator=(const SelectHeroRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SelectHeroRsp(SelectHeroRsp&& from) noexcept
    : SelectHeroRsp() {
    *this = ::std::move(from);
  }

  inline SelectHeroRsp& operator=(SelectHeroRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectHeroRsp& default_instance();

  static inline const SelectHeroRsp* internal_default_instance() {
    return reinterpret_cast<const SelectHeroRsp*>(
               &_SelectHeroRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(SelectHeroRsp* other);
  void Swap(SelectHeroRsp* other);
  friend void swap(SelectHeroRsp& a, SelectHeroRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SelectHeroRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SelectHeroRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SelectHeroRsp& from);
  void MergeFrom(const SelectHeroRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SelectHeroRsp* other);
  protected:
  explicit SelectHeroRsp(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_succ = 1;
  void clear_is_succ();
  static const int kIsSuccFieldNumber = 1;
  bool is_succ() const;
  void set_is_succ(bool value);

  // @@protoc_insertion_point(class_scope:SelectHeroRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool is_succ_;
  mutable int _cached_size_;
  friend struct protobuf_Battle_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RspFreeHero

// repeated uint64 free_hero_ids = 1;
inline int RspFreeHero::free_hero_ids_size() const {
  return free_hero_ids_.size();
}
inline void RspFreeHero::clear_free_hero_ids() {
  free_hero_ids_.Clear();
}
inline ::google::protobuf::uint64 RspFreeHero::free_hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:RspFreeHero.free_hero_ids)
  return free_hero_ids_.Get(index);
}
inline void RspFreeHero::set_free_hero_ids(int index, ::google::protobuf::uint64 value) {
  free_hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:RspFreeHero.free_hero_ids)
}
inline void RspFreeHero::add_free_hero_ids(::google::protobuf::uint64 value) {
  free_hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:RspFreeHero.free_hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
RspFreeHero::free_hero_ids() const {
  // @@protoc_insertion_point(field_list:RspFreeHero.free_hero_ids)
  return free_hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
RspFreeHero::mutable_free_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:RspFreeHero.free_hero_ids)
  return &free_hero_ids_;
}

// -------------------------------------------------------------------

// SelectHeroReq

// uint64 hero_id = 1;
inline void SelectHeroReq::clear_hero_id() {
  hero_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SelectHeroReq::hero_id() const {
  // @@protoc_insertion_point(field_get:SelectHeroReq.hero_id)
  return hero_id_;
}
inline void SelectHeroReq::set_hero_id(::google::protobuf::uint64 value) {
  
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:SelectHeroReq.hero_id)
}

// -------------------------------------------------------------------

// SelectHeroRsp

// bool is_succ = 1;
inline void SelectHeroRsp::clear_is_succ() {
  is_succ_ = false;
}
inline bool SelectHeroRsp::is_succ() const {
  // @@protoc_insertion_point(field_get:SelectHeroRsp.is_succ)
  return is_succ_;
}
inline void SelectHeroRsp::set_is_succ(bool value) {
  
  is_succ_ = value;
  // @@protoc_insertion_point(field_set:SelectHeroRsp.is_succ)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Battle_2eproto__INCLUDED
